swagger: "2.0"
info:
  title: Ecomerse Api
  description: API.
  version: 1.0.0
#host: localhost:7000
host: e-commerce-shop-back.herokuapp.com
basePath: /api
schemes:
  - https
  - http
paths:
  /info/update:
    post:
      tags:
        - "mainInfoUpdate"
      summary: "post "
      description: "This can only be done by the logged in mainInfo."
      operationId: "updateItem"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: id
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: title.ua
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: title.ru
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: title.en
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: titleLong.ua
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: titleLong.ru
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: titleLong.en
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: address.ua
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: address.ru
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: address.en
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: phones1
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: phones2
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: phones3
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: email
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: photo
          type: file
          required: false
          description: The file to upload.
      responses:
        400:
          description: "Invalid mainInfo supplied"
        404:
          description: "mainInfo not found"
  /info:
    get:
      tags:
        - "mainInfo"
      summary: Returns all mainInfo.
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
    post:
      tags:
        - "mainInfo"
      summary: "Add mainInfo in the store with form data"
      description: ""
      operationId: "add"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: title.ua
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: title.ru
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: title.en
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: titleLong.ua
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: titleLong.ru
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: titleLong.en
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: address.ua
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: address.ru
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: address.en
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: phones1
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: phones2
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: phones3
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: email
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: photo
          type: file
          required: true
          description: The file to upload.
      responses:
        405:
          description: "Invalid input"
    delete:
      tags:
        - "mainInfo"
      summary: "Deletes a mainInfo"
      description: ""
      operationId: "delete mainInfo"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - mainInfo - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "gallery not found"

  /gallery:
    get:
      tags:
        - "gallery"
      summary: Returns all gallery.
      parameters:
        - name: "_id"
          in: "query"
          description: "gallery _Id"
          type: "string"
        - name: "idItem"
          in: "query"
          description: "gallery IdItem"
          type: "string"
        - name: "category"
          in: "query"
          description: "gallery category"
          type: "string"
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /gallery/update:
    post:
      tags:
        - "galleryUpdate"
      summary: "update gallery in the store with form data"
      description: ""
      operationId: "updateGallery"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: id
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: idItem
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: category
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: quality
          type: integer
          required: false
          description: Description of file contents.
        - in: formData
          name: photo
          type: file
          required: true
          description: The file to upload.
      responses:
        405:
          description: "Invalid input"
  /gallery/single:
    get:
      deprecated: true
      tags:
        - "gallery"
      summary: "Find single gallery"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "finditemByData"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "gallery Id"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "gallery"
      summary: "Add gallery in the store with form data"
      description: ""
      operationId: "updateGallery"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: idItem
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: category
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: quality
          type: integer
          required: false
          description: Description of file contents.
        - in: formData
          name: photo
          type: file
          required: true
          description: The file to upload.
      responses:
        405:
          description: "Invalid input"
    delete:
      tags:
        - "gallery"
      summary: "Deletes a gallery"
      description: ""
      operationId: "delete gallery"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - gallery - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "gallery not found"
  /item:
    get:
      tags:
        - "item"
      summary: Returns all item.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: sort
        - in: query
          name: sortOrder
        - in: query
          name: limit
        - in: query
          name: page
        - in: query
          name: _id
        - in: query
          name: category
        - in: query
          name: subCategory
        - in: query
          name: title
        - in: query
          name: titleLong
        - in: query
          name: titleUpper
        - in: query
          name: price
        - in: query
          name: discount
        - in: query
          name: stars
        - in: query
          name: isPopular
        - in: query
          name: statusItems
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /item/single:
    get:
      deprecated: true
      tags:
        - "item"
      summary: "Find single item"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "finditemByData"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "itemId"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "item"
      summary: "Add item in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Item object add (category	string
                                       required: true
                                       subCategory	string
                                       required: true)"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "item"
      summary: "Updated item"
      description: "This can only be done by the logged in item."
      operationId: "updateItem"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "itemId"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Item object put"
          required: true
          schema:
            $ref: "#/definitions/Item"
      responses:
        400:
          description: "Invalid item supplied"
        404:
          description: "Item not found"
    delete:
      tags:
        - "item"
      summary: "Deletes a Item"
      description: ""
      operationId: "delete Item"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - item - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Item not found"
  /reviewitem:
    get:
      tags:
        - "reviewitem"
      summary: Returns all reviewItem.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: _id
        - in: query
          name: idItem
        - in: query
          name: name
        - in: query
          name: stars
        - in: query
          name: text
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /reviewitem/single:
    get:
      deprecated: true
      tags:
        - "reviewitem"
      summary: "Find single reviewItem"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "finditemByData"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "reviewItemId"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "reviewitem"
      summary: "Add reviewItem in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: idItem
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: name
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: stars
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: text
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: photo
          type: file
          required: false
          description: The file to upload.
        - in: formData
          name: quality
          type: integer
          required: false
          description: Description of file contents.
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "reviewitem"
      summary: "Updated reviewItem"
      description: "This can only be done by the logged in reviewItem."
      operationId: "updateReviewItem"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "reviewItemId"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "reviewItem object put"
          required: true
          schema:
            $ref: "#/definitions/ReviewItem"
      responses:
        400:
          description: "Invalid reviewItem supplied"
        404:
          description: "reviewItem not found"
    delete:
      tags:
        - "reviewitem"
      summary: "Deletes a reviewItem"
      description: ""
      operationId: "delete reviewItem"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - reviewItem - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "reviewItem not found"

  /category:
    get:
      tags:
        - "category"
      summary: Returns all category.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: _id
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /category/single:
    get:
      deprecated: true
      tags:
        - "category"
      summary: "Find single category"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "finditemByData"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "categoryId"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "category"
      summary: "Add category in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "category object add"
          required: true
          schema:
            $ref: "#/definitions/category"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "category"
      summary: "Updated category"
      description: "This can only be done by the logged in category."
      operationId: "updatecategory"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "category"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "category object put"
          required: true
          schema:
            $ref: "#/definitions/category"
      responses:
        400:
          description: "Invalid category supplied"
        404:
          description: "category not found"
    delete:
      tags:
        - "category"
      summary: "Deletes a category"
      description: ""
      operationId: "delete category"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - category - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "category not found"
  /subCategory:
    get:
      tags:
        - "subCategory"
      summary: Returns all category.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: _id
        - in: query
          name: catId
        - in: query
          name: name
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /subCategory/single:
    get:
      tags:
        - "subCategory"
      summary: "Find single subCategory"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findsubCategoryByData"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "subCategoryId"
          required: true
          type: "string"
        - name: "catId"
          in: "query"
          description: "CategoryId"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "subCategory"
      summary: "Add subCategory in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "_id"
          in: "query"
          description: "category Id"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "subCategory object add"
          required: true
          schema:
            $ref: "#/definitions/subCategory"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "subCategory"
      summary: "Updated subCategory"
      description: "This can only be done by the logged in subCategory."
      operationId: "updatesubCategory"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "catId"
          in: "query"
          description: "category"
          required: true
          type: "string"
        - name: "_id"
          in: "query"
          description: "Sub category _id"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "subCategory object put"
          required: true
          schema:
            $ref: "#/definitions/subCategory"
      responses:
        400:
          description: "Invalid category supplied"
        404:
          description: "subCategory not found"
    delete:
      tags:
        - "subCategory"
      summary: "Deletes a subCategory"
      description: ""
      operationId: "delete subCategory"
      produces:
        - "application/json"
      parameters:
        - name: "catId"
          in: "query"
        - name: "subCatId"
          in: "query"
          description: "delete - subCategory - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "subCategory not found"
  /user/login:
    post:
      tags:
        - "user"
      summary: login to site.
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: "formData"
          description: "dima@gmail.com"
          required: true
          type: "string"
        - name: "password"
          in: "formData"
          description: "1111"
          required: true
          type: "string"
      responses:
        405:
          description: "Invalid input"
  /user/logout:
    get:
      tags:
        - "user"
      summary: logout user.
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /user:
    get:
      tags:
        - "user"
      summary: Returns all user.
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /user/single:
    get:
      tags:
        - "user"
      summary: "Find single user"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findAdminByData"
      produces:
        - "application/json"
#      parameters:
#        - name: "id"
#          in: "query"
#          description: "5dd66a92f3a23a1b4065fa2a"
#          required: true
#          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "user"
      summary: "Add User in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "firstName"
          in: "formData"
          description: "add name of the User"
          required: false
          type: "string"
        - name: "lastName"
          in: "formData"
          description: "add name of the User"
          required: false
          type: "string"
        - name: "email"
          in: "formData"
          description: "add email of the User"
          required: false
          type: "string"
        - name: "phone"
          in: formData
          description: "add email of the User"
          required: false
          type: "string"
        - name: "password"
          in: "formData"
          description: "add password of the User"
          required: false
          type: "string"
        - name: "role"
          in: "formData"
          description: "role"
          required: false
          type: "string"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
        - "application/json"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - name: "id"
          in: "query"
          description: "5dde41fd7ac7e72f14479b69"
          required: true
          type: "string"
        - name: "firstName"
          in: "formData"
          description: "add name of the User"
          required: false
          type: "string"
        - name: "lastName"
          in: "formData"
          description: "add name of the User"
          required: false
          type: "string"
        - name: "email"
          in: "formData"
          description: "add email of the User"
          required: false
          type: "string"
        - name: "phone"
          in: formData
          description: "add email of the User"
          required: false
          type: "string"
        - name: "password"
          in: "formData"
          description: "add password of the User"
          required: false
          type: "string"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
    delete:
      tags:
        - "user"
      summary: "Deletes a User"
      description: ""
      operationId: "deleteUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - user - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
definitions:
  User:
    type: "object"
    required:
    properties:
      lastName:
        type: "string"
      firstName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  Item:
    type: "object"
    properties:
      category:
        type: "string"
        required: true
      subCategory:
        type: "string"
        required: true
      title:
        type: object
        properties:
          ua:
            type: "string"
          ru:
            type: "string"
          en:
            type: "string"
      titleLong:
        type: object
        properties:
          ua:
            type: "string"
          ru:
            type: "string"
          en:
            type: "string"
      titleUpper:
        type: object
        properties:
          ua:
            type: "string"
          ru:
            type: "string"
          en:
            type: "string"
      description:
        type: object
        properties:
          ua:
            type: "string"
          ru:
            type: "string"
          en:
            type: "string"
      price:
        type: "integer"
        format: "int64"
      discount:
        type: "string"
      video:
        type: "string"
      dateAddItem:
        type: string
        format: date
      stars:
        type: "integer"
        format: "int32"
      statusItems:
        type: "boolean"
      isPopular:
        type: "boolean"
        default: false
  ReviewItem:
    type: "object"
    properties:
      idItem:
        type: "string"
      name:
        type: "string"
      stars:
        type: "string"
      photo:
        type: "string"
      text:
        type: "string"
  category:
    type: "object"
    properties:
      name:
        type: object
        properties:
          ua:
            type: "string"
          ru:
            type: "string"
          en:
            type: "string"
      catId:
        type: "string"
  subCategory:
    type: "object"
    properties:
      name:
        type: object
        properties:
          ua:
            type: "string"
          ru:
            type: "string"
          en:
            type: "string"
      subCatId:
        type: "string"
#      reviews:
#        type: "array"
#        items:
#          type: "object"
#          properties:
#            name:
#              type: "string"
#            stars:
#              type: "string"
#            text:
#              type: "string"
#








